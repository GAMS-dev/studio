/**
 * GAMS Engine
 * With GAMS Engine you can register and solve GAMS models. It has a namespace management system, so you can restrict your users to certain models.
 *
 * The version of the OpenAPI document: latest
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIModels.h
 *
 * 
 */

#ifndef OAIModels_H
#define OAIModels_H

#include <QJsonObject>

#include "OAIInex.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIModels : public OAIObject {
public:
    OAIModels();
    OAIModels(QString json);
    ~OAIModels() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getArguments() const;
    void setArguments(const QList<QString> &arguments);
    bool is_arguments_Set() const;
    bool is_arguments_Valid() const;

    OAIInex getInex() const;
    void setInex(const OAIInex &inex);
    bool is_inex_Set() const;
    bool is_inex_Valid() const;

    qint32 getLength() const;
    void setLength(const qint32 &length);
    bool is_length_Set() const;
    bool is_length_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRun() const;
    void setRun(const QString &run);
    bool is_run_Set() const;
    bool is_run_Valid() const;

    QDateTime getUploadDate() const;
    void setUploadDate(const QDateTime &upload_date);
    bool is_upload_date_Set() const;
    bool is_upload_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> arguments;
    bool m_arguments_isSet;
    bool m_arguments_isValid;

    OAIInex inex;
    bool m_inex_isSet;
    bool m_inex_isValid;

    qint32 length;
    bool m_length_isSet;
    bool m_length_isValid;

    QString name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString run;
    bool m_run_isSet;
    bool m_run_isValid;

    QDateTime upload_date;
    bool m_upload_date_isSet;
    bool m_upload_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIModels)

#endif // OAIModels_H
