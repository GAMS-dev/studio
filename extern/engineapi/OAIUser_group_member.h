/**
 * GAMS Engine
 * With GAMS Engine you can register and solve GAMS models. It has a namespace management system, so you can restrict your users to certain models.
 *
 * The version of the OpenAPI document: 23.06.02
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUser_group_member.h
 *
 * 
 */

#ifndef OAIUser_group_member_H
#define OAIUser_group_member_H

#include <QJsonObject>

#include "OAIModel_user.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUser_group_member : public OAIObject {
public:
    OAIUser_group_member();
    OAIUser_group_member(QString json);
    ~OAIUser_group_member() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getAddedAt() const;
    void setAddedAt(const QDateTime &added_at);
    bool is_added_at_Set() const;
    bool is_added_at_Valid() const;

    OAIModel_user getAddedBy() const;
    void setAddedBy(const OAIModel_user &added_by);
    bool is_added_by_Set() const;
    bool is_added_by_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime added_at;
    bool m_added_at_isSet;
    bool m_added_at_isValid;

    OAIModel_user added_by;
    bool m_added_by_isSet;
    bool m_added_by_isValid;

    QString username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUser_group_member)

#endif // OAIUser_group_member_H
