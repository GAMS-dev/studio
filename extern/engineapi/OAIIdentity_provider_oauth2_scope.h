/**
 * GAMS Engine
 * With GAMS Engine you can register and solve GAMS models. It has a namespace management system, so you can restrict your users to certain models.
 *
 * The version of the OpenAPI document: 25.04.23
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIdentity_provider_oauth2_scope.h
 *
 * 
 */

#ifndef OAIIdentity_provider_oauth2_scope_H
#define OAIIdentity_provider_oauth2_scope_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIdentity_provider_oauth2_scope : public OAIObject {
public:
    OAIIdentity_provider_oauth2_scope();
    OAIIdentity_provider_oauth2_scope(QString json);
    ~OAIIdentity_provider_oauth2_scope() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRequestScope() const;
    void setRequestScope(const QString &request_scope);
    bool is_request_scope_Set() const;
    bool is_request_scope_Valid() const;

    QString getScope() const;
    void setScope(const QString &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_request_scope;
    bool m_request_scope_isSet;
    bool m_request_scope_isValid;

    QString m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIdentity_provider_oauth2_scope)

#endif // OAIIdentity_provider_oauth2_scope_H
