/**
 * GAMS Engine
 * With GAMS Engine you can register and solve GAMS models. It has a namespace management system, so you can restrict your users to certain models.
 *
 * The version of the OpenAPI document: latest
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILog_piece.h
 *
 * 
 */

#ifndef OAILog_piece_H
#define OAILog_piece_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILog_piece : public OAIObject {
public:
    OAILog_piece();
    OAILog_piece(QString json);
    ~OAILog_piece() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getGamsReturnCode() const;
    void setGamsReturnCode(const qint32 &gams_return_code);
    bool is_gams_return_code_Set() const;
    bool is_gams_return_code_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    bool isQueueFinished() const;
    void setQueueFinished(const bool &queue_finished);
    bool is_queue_finished_Set() const;
    bool is_queue_finished_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 gams_return_code;
    bool m_gams_return_code_isSet;
    bool m_gams_return_code_isValid;

    QString message;
    bool m_message_isSet;
    bool m_message_isValid;

    bool queue_finished;
    bool m_queue_finished_isSet;
    bool m_queue_finished_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILog_piece)

#endif // OAILog_piece_H
