/**
 * GAMS Engine
 * With GAMS Engine you can register and solve GAMS models. It has a namespace management system, so you can restrict your users to certain models.
 *
 * The version of the OpenAPI document: 23.06.02
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIModel_pool_usage.h
 *
 * 
 */

#ifndef OAIModel_pool_usage_H
#define OAIModel_pool_usage_H

#include <QJsonObject>

#include "OAIModel_instance_info.h"
#include "OAIModel_user.h"
#include "OAITime_span_pool_worker.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIModel_pool_usage : public OAIObject {
public:
    OAIModel_pool_usage();
    OAIModel_pool_usage(QString json);
    ~OAIModel_pool_usage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QDateTime getDeletedAt() const;
    void setDeletedAt(const QDateTime &deleted_at);
    bool is_deleted_at_Set() const;
    bool is_deleted_at_Valid() const;

    OAIModel_instance_info getInstance() const;
    void setInstance(const OAIModel_instance_info &instance);
    bool is_instance_Set() const;
    bool is_instance_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    OAIModel_user getOwner() const;
    void setOwner(const OAIModel_user &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    QList<OAITime_span_pool_worker> getTimes() const;
    void setTimes(const QList<OAITime_span_pool_worker> &times);
    bool is_times_Set() const;
    bool is_times_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime deleted_at;
    bool m_deleted_at_isSet;
    bool m_deleted_at_isValid;

    OAIModel_instance_info instance;
    bool m_instance_isSet;
    bool m_instance_isValid;

    QString label;
    bool m_label_isSet;
    bool m_label_isValid;

    OAIModel_user owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    QList<OAITime_span_pool_worker> times;
    bool m_times_isSet;
    bool m_times_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIModel_pool_usage)

#endif // OAIModel_pool_usage_H
