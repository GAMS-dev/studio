/**
 * GAMS Engine
 * With GAMS Engine you can register and solve GAMS models. It has a namespace management system, so you can restrict your users to certain models.
 *
 * The version of the OpenAPI document: 25.04.23
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUser.h
 *
 * 
 */

#ifndef OAIUser_H
#define OAIUser_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUser : public OAIObject {
public:
    OAIUser();
    OAIUser(QString json);
    ~OAIUser() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDeleted() const;
    void setDeleted(const bool &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    QString getIdentityProvider() const;
    void setIdentityProvider(const QString &identity_provider);
    bool is_identity_provider_Set() const;
    bool is_identity_provider_Valid() const;

    QString getIdentityProviderUserSubject() const;
    void setIdentityProviderUserSubject(const QString &identity_provider_user_subject);
    bool is_identity_provider_user_subject_Set() const;
    bool is_identity_provider_user_subject_Valid() const;

    QDateTime getInvitationTime() const;
    void setInvitationTime(const QDateTime &invitation_time);
    bool is_invitation_time_Set() const;
    bool is_invitation_time_Valid() const;

    QString getInviterName() const;
    void setInviterName(const QString &inviter_name);
    bool is_inviter_name_Set() const;
    bool is_inviter_name_Valid() const;

    QString getOldUsername() const;
    void setOldUsername(const QString &old_username);
    bool is_old_username_Set() const;
    bool is_old_username_Valid() const;

    QList<QString> getRoles() const;
    void setRoles(const QList<QString> &roles);
    bool is_roles_Set() const;
    bool is_roles_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    QString m_identity_provider;
    bool m_identity_provider_isSet;
    bool m_identity_provider_isValid;

    QString m_identity_provider_user_subject;
    bool m_identity_provider_user_subject_isSet;
    bool m_identity_provider_user_subject_isValid;

    QDateTime m_invitation_time;
    bool m_invitation_time_isSet;
    bool m_invitation_time_isValid;

    QString m_inviter_name;
    bool m_inviter_name_isSet;
    bool m_inviter_name_isValid;

    QString m_old_username;
    bool m_old_username_isSet;
    bool m_old_username_isValid;

    QList<QString> m_roles;
    bool m_roles_isSet;
    bool m_roles_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUser)

#endif // OAIUser_H
