/**
 * GAMS Engine
 * With GAMS Engine you can register and solve GAMS models. It has a namespace management system, so you can restrict your users to certain models.
 *
 * The version of the OpenAPI document: latest
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWebhook_parameterized_event.h
 *
 * 
 */

#ifndef OAIWebhook_parameterized_event_H
#define OAIWebhook_parameterized_event_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWebhook_parameterized_event : public OAIObject {
public:
    OAIWebhook_parameterized_event();
    OAIWebhook_parameterized_event(QString json);
    ~OAIWebhook_parameterized_event() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEvent() const;
    void setEvent(const QString &event);
    bool is_event_Set() const;
    bool is_event_Valid() const;

    QList<QString> getParameters() const;
    void setParameters(const QList<QString> &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString event;
    bool m_event_isSet;
    bool m_event_isValid;

    QList<QString> parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWebhook_parameterized_event)

#endif // OAIWebhook_parameterized_event_H
