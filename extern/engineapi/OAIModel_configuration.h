/**
 * GAMS Engine
 * With GAMS Engine you can register and solve GAMS models. It has a namespace management system, so you can restrict your users to certain models.
 *
 * The version of the OpenAPI document: latest
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIModel_configuration.h
 *
 * 
 */

#ifndef OAIModel_configuration_H
#define OAIModel_configuration_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIModel_configuration : public OAIObject {
public:
    OAIModel_configuration();
    OAIModel_configuration(QString json);
    ~OAIModel_configuration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHostname() const;
    void setHostname(const QString &hostname);
    bool is_hostname_Set() const;
    bool is_hostname_Valid() const;

    QString getInstancePoolAccess() const;
    void setInstancePoolAccess(const QString &instance_pool_access);
    bool is_instance_pool_access_Set() const;
    bool is_instance_pool_access_Valid() const;

    qint32 getTextEntriesMaxSize() const;
    void setTextEntriesMaxSize(const qint32 &text_entries_max_size);
    bool is_text_entries_max_size_Set() const;
    bool is_text_entries_max_size_Valid() const;

    QString getWebhookAccess() const;
    void setWebhookAccess(const QString &webhook_access);
    bool is_webhook_access_Set() const;
    bool is_webhook_access_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString hostname;
    bool m_hostname_isSet;
    bool m_hostname_isValid;

    QString instance_pool_access;
    bool m_instance_pool_access_isSet;
    bool m_instance_pool_access_isValid;

    qint32 text_entries_max_size;
    bool m_text_entries_max_size_isSet;
    bool m_text_entries_max_size_isValid;

    QString webhook_access;
    bool m_webhook_access_isSet;
    bool m_webhook_access_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIModel_configuration)

#endif // OAIModel_configuration_H
