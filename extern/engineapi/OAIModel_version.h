/**
 * GAMS Engine
 * With GAMS Engine you can register and solve GAMS models. It has a namespace management system, so you can restrict your users to certain models.
 *
 * The version of the OpenAPI document: latest
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIModel_version.h
 *
 * 
 */

#ifndef OAIModel_version_H
#define OAIModel_version_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIModel_version : public OAIObject {
public:
    OAIModel_version();
    OAIModel_version(QString json);
    ~OAIModel_version() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGamsVersion() const;
    void setGamsVersion(const QString &gams_version);
    bool is_gams_version_Set() const;
    bool is_gams_version_Valid() const;

    bool isInKubernetes() const;
    void setInKubernetes(const bool &in_kubernetes);
    bool is_in_kubernetes_Set() const;
    bool is_in_kubernetes_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString gams_version;
    bool m_gams_version_isSet;
    bool m_gams_version_isValid;

    bool in_kubernetes;
    bool m_in_kubernetes_isSet;
    bool m_in_kubernetes_isValid;

    QString version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIModel_version)

#endif // OAIModel_version_H
