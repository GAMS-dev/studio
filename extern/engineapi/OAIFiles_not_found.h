/**
 * GAMS Engine
 * With GAMS Engine you can register and solve GAMS models. It has a namespace management system, so you can restrict your users to certain models.
 *
 * The version of the OpenAPI document: 25.04.23
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFiles_not_found.h
 *
 * 
 */

#ifndef OAIFiles_not_found_H
#define OAIFiles_not_found_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFiles_not_found : public OAIObject {
public:
    OAIFiles_not_found();
    OAIFiles_not_found(QString json);
    ~OAIFiles_not_found() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getFilename() const;
    void setFilename(const QList<QString> &filename);
    bool is_filename_Set() const;
    bool is_filename_Valid() const;

    QList<QString> getHypercubeToken() const;
    void setHypercubeToken(const QList<QString> &hypercube_token);
    bool is_hypercube_token_Set() const;
    bool is_hypercube_token_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QList<QString> getToken() const;
    void setToken(const QList<QString> &token);
    bool is_token_Set() const;
    bool is_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_filename;
    bool m_filename_isSet;
    bool m_filename_isValid;

    QList<QString> m_hypercube_token;
    bool m_hypercube_token_isSet;
    bool m_hypercube_token_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QList<QString> m_token;
    bool m_token_isSet;
    bool m_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFiles_not_found)

#endif // OAIFiles_not_found_H
