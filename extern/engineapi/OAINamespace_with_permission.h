/**
 * GAMS Engine
 * With GAMS Engine you can register and solve GAMS models. It has a namespace management system, so you can restrict your users to certain models.
 *
 * The version of the OpenAPI document: 23.06.02
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINamespace_with_permission.h
 *
 * 
 */

#ifndef OAINamespace_with_permission_H
#define OAINamespace_with_permission_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINamespace_with_permission : public OAIObject {
public:
    OAINamespace_with_permission();
    OAINamespace_with_permission(QString json);
    ~OAINamespace_with_permission() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDiskQuota() const;
    void setDiskQuota(const qint32 &disk_quota);
    bool is_disk_quota_Set() const;
    bool is_disk_quota_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPermission() const;
    void setPermission(const qint32 &permission);
    bool is_permission_Set() const;
    bool is_permission_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 disk_quota;
    bool m_disk_quota_isSet;
    bool m_disk_quota_isValid;

    QString name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 permission;
    bool m_permission_isSet;
    bool m_permission_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINamespace_with_permission)

#endif // OAINamespace_with_permission_H
