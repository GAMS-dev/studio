/**
 * GAMS Engine
 * With GAMS Engine you can register and solve GAMS models. It has a namespace management system, so you can restrict your users to certain models.
 *
 * The version of the OpenAPI document: 23.06.02
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEngine_license.h
 *
 * 
 */

#ifndef OAIEngine_license_H
#define OAIEngine_license_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEngine_license : public OAIObject {
public:
    OAIEngine_license();
    OAIEngine_license(QString json);
    ~OAIEngine_license() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getExpirationDate() const;
    void setExpirationDate(const QDateTime &expiration_date);
    bool is_expiration_date_Set() const;
    bool is_expiration_date_Valid() const;

    QString getLicense() const;
    void setLicense(const QString &license);
    bool is_license_Set() const;
    bool is_license_Valid() const;

    QString getUsi() const;
    void setUsi(const QString &usi);
    bool is_usi_Set() const;
    bool is_usi_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime expiration_date;
    bool m_expiration_date_isSet;
    bool m_expiration_date_isValid;

    QString license;
    bool m_license_isSet;
    bool m_license_isValid;

    QString usi;
    bool m_usi_isSet;
    bool m_usi_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEngine_license)

#endif // OAIEngine_license_H
