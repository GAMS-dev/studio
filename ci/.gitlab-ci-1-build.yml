build-deg:
  stage: build
  tags: [macos]
  needs: [install-gams-deg]
  variables:
    qtpath: /Users/gitlab/Qt/6.6.2/macos/bin
  script:
    - printf "GAMS_DISTRIB=$HOME/cache/gams-installs/`cat gams_folder_deg.txt`\n" > gamsinclude.pri
    - printf "GAMS_DISTRIB_C_API=\$\$GAMS_DISTRIB/apifiles/C/api\n" >> gamsinclude.pri
    - printf "GAMS_DISTRIB_CPP_API=\$\$GAMS_DISTRIB/apifiles/C++/api\n" >> gamsinclude.pri
    - mkdir build && cd build
    - PATH="${qtpath}:${PATH}"
    - qmake ../gams-studio.pro CONFIG+=release && make -j4
  artifacts:
    name: studio-deg
    expire_in: 2 hours
    paths: [build/*]

build-dac:
  stage: build
  tags: [macos-arm64]
  needs: [install-gams-dac]
  variables:
    qtpath: /Users/gitlab/Qt/6.6.2/macos/bin
  script:
    - printf "GAMS_DISTRIB=$HOME/cache/gams-installs/`cat gams_folder_dac.txt`\n" > gamsinclude.pri
    - printf "GAMS_DISTRIB_C_API=\$\$GAMS_DISTRIB/apifiles/C/api\n" >> gamsinclude.pri
    - printf "GAMS_DISTRIB_CPP_API=\$\$GAMS_DISTRIB/apifiles/C++/api\n" >> gamsinclude.pri
    - mkdir build && cd build
    - PATH="${qtpath}:${PATH}"
    - qmake ../gams-studio.pro CONFIG+=release && make -j4
  artifacts:
    name: studio-dac
    expire_in: 2 hours
    paths: [build/*]

build-leg:
  stage: build
  tags: [linux]
  image:
    name: $GAMS_CONTAINER_REGISTRY/qt-machines/leg/builder-qt6.6:latest
    entrypoint: [""]   # prevent startup.sh
  needs: [install-gams-leg]
  variables:
    DOLLAR_GAMS: $$$$GAMS_DISTRIB
  script:
    - echo "GAMS_DISTRIB=/cache/gams-installs/`cat gams_folder_leg.txt`" > gamsinclude.pri
    - echo "GAMS_DISTRIB_C_API=$DOLLAR_GAMS/apifiles/C/api" >> gamsinclude.pri
    - echo "GAMS_DISTRIB_CPP_API=$DOLLAR_GAMS/apifiles/C++/api" >> gamsinclude.pri
    - mkdir build && cd build
    - qmake ../gams-studio.pro CONFIG+=release && make -j4
  artifacts:
    name: studio-leg
    expire_in: 2 hours
    paths: [build/*]

build-wei:
  stage: build
  tags: [windows]
  needs: [install-gams-wei]
  variables:
     cmd_vcvars: C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat
  image:
    name: $GAMS_CONTAINER_REGISTRY/qt-machines/wei/builder-qt6.6:latest
    entrypoint: [""]
  script:
    - '& $cmd_vcvars'
    - $data = 
      "GAMS_DISTRIB=C:/Cache/gams-installs/$(Get-Content mygmsdir.tmp -Raw)",
      'GAMS_DISTRIB_C_API=$$GAMS_DISTRIB/apifiles/C/api',
      'GAMS_DISTRIB_CPP_API=$$GAMS_DISTRIB/apifiles/C++/api'
    - $data | out-file -encoding ascii gamsinclude.pri
    - mkdir build
    - cd build
    - qmake.exe ..\gams-studio.pro "CONFIG+=release"
    - nmake.exe
  artifacts:
    name: studio-wei
    expire_in: 2 hours
    paths: [build/*]

build-wei-debug:
  stage: build
  rules:
    - if: $PF_WEI_DEBUG == "0"
      when: never
    - when: on_success
  tags: [windows]
  needs: [install-gams-wei]
  variables:
     cmd_vcvars: C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat
  image:
    name: $GAMS_CONTAINER_REGISTRY/qt-machines/wei/builder-qt6.6:latest
  script:
    - '& $cmd_vcvars'
    - $data = 
      "GAMS_DISTRIB=C:/Cache/gams-installs/$(Get-Content mygmsdir.tmp -Raw)",
      'GAMS_DISTRIB_C_API=$$GAMS_DISTRIB/apifiles/C/api',
      'GAMS_DISTRIB_CPP_API=$$GAMS_DISTRIB/apifiles/C++/api'
    - $data | out-file -encoding ascii gamsinclude.pri
    - mkdir build-debug
    - cd build-debug
    - qmake.exe ..\gams-studio.pro "CONFIG+=debug"
    - nmake.exe
  artifacts:
    name: studio-wei-debug
    expire_in: 2 hours
    paths: [build-debug/*]
