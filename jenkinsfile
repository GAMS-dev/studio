pipeline {
    agent any
    
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', daysToKeepStr: '2'))
    }

    triggers {
        cron('0 23 * * *')
    }

    stages {
        stage('Build') {
            steps {
                parallel linux: {
                    node('master') {
                        checkout scm
                        sh 'qmake src/ide.pro && make -j3'
                    }
                },
                windowsX86: {
                    node('windows') {
                        checkout scm
                        bat """
                            echo 'Setting up environment for Qt usage...'
                            set PATH=C:\\Qt\\5.9.1\\mingw53_32\\bin;C:\\Qt\\Tools\\mingw530_32\\bin;%PATH%
                            cd src
                            qmake ide.pro
                            make
                        """
                    }
                },
                macos: {
                    node('macos') {
                        checkout scm
                        sh 'qmake src/ide.pro && make -j3'
                    }
                }
            }
        }
        stage('Test') {
            steps {
                parallel linux: {
                    node('master') {
                        sh '''
                            echo 'TODO Test on linux'
                        '''
                    }
                },
                windows: {
                    node('windows') {
                        bat '''
                            echo 'TODO Test on windows'
                        '''
                    }
                },
                macos: {
                    node('macos') {
                        sh '''
                            echo 'TODO Test on macos'
                        '''
                    }
                }
            }
        }
        stage('Pack') {
            steps {
                parallel linux: {
                    node('master') {
                        sh '''
                            echo 'TODO Pack on linux'
                        '''
                    }
                },
                windowsX86: {
                    node('windows') {
                        bat """
                            echo 'Setting up environment for Qt usage...'
                            set PATH=C:\\Qt\\5.9.1\\mingw53_32\\bin;C:\\Qt\\Tools\\mingw530_32\\bin;"C:\\Program Files\\7-Zip";%PATH%
                            cd bin
                            windeployqt --release --compiler-runtime ide.exe
                            7z a -r ide-x86.zip *
                            archiveArtifacts artifacts: 'ide-x86.zip', fingerprint: true
                        """
                    }
                },
                macos: {
                    node('macos') {
                        sh '''
                            cd bin
                            macdeployqt ide.app -dmg -always-overwrite
                        '''
                        archiveArtifacts artifacts: '**/*.dmg', fingerprint: true
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                parallel linux: {
                    node('master') {
                        sh '''
                            echo 'TODO Deploy linux'
                        '''
                    }
                },
                windows: {
                    node('windows') {
                        bat '''
                            echo 'TODO Deploy windows'
                        '''
                    }
                },
                macos: {
                    node('macos') {
                        sh '''
                            echo 'TODO Deploy macos'
                        '''
                    }
                }
            }
        }
    }
}
