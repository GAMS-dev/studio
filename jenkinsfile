pipeline {
    agent any

    options {
        buildDiscarder(logRotator(numToKeepStr: '10', daysToKeepStr: '2'))
    }

    triggers {
        cron('0 23 * * *')
    }

    stages {
        stage('Build') {
            steps {
                parallel linux: {
                    node('master') {
                        checkout scm
                        sh 'qmake src/ide.pro && make -j3'
                    }
                },
                windows: {
                    node('windows') {
                        checkout scm
                        bat '''
                            echo 'Setting up environment for Qt usage...'
                            set PATH="C:\\Qt\\5.9.1\\msvc2015_64\\bin";%PATH%
                            "C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat" amd64 && cd src && qmake ide.pro "CONFIG+=release" && nmake qmake_all
                        '''
                    }
                },
                macos: {
                    node('macos') {
                        checkout scm
                        sh 'qmake src/ide.pro && make -j3'
                    }
                }
            }
        }
        stage('Test') {
            steps {
                parallel linux: {
                    node('master') {
                        sh '''
                            echo 'TODO Test on linux'
                        '''
                    }
                },
                windows: {
                    node('windows') {
                        bat '''
                            echo 'TODO Test on windows'
                        '''
                    }
                },
                macos: {
                    node('macos') {
                        sh '''
                            echo 'TODO Test on macos'
                        '''
                    }
                }
            }
        }
        stage('Pack') {
            steps {
                parallel linux: {
                    node('master') {
                        sh '''
                            echo 'TODO Pack on linux'
                        '''
                    }
                },
                windows: {
                    node('windows') {
                        bat '''
                            echo 'TODO Pack on windows'
                        '''
                    }
                },
                macos: {
                    node('macos') {
                        sh '''
                            cd bin
                            macdeployqt ide.app -dmg -always-overwrite
                        '''
                        archiveArtifacts artifacts: '**/*.dmg', fingerprint: true
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                parallel linux: {
                    node('master') {
                        sh '''
                            echo 'TODO Deploy linux'
                        '''
                    }
                },
                windows: {
                    node('windows') {
                        bat '''
                            echo 'TODO Deploy windows'
                        '''
                    }
                },
                macos: {
                    node('macos') {
                        sh '''
                            echo 'TODO Deploy macos'
                        '''
                    }
                }
            }
        }
    }
}
